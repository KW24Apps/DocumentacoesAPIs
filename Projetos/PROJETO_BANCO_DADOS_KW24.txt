# PROJETO BANCO DE DADOS KW24 - Sincroniza√ß√£o Bitrix24

## Objetivo
Sistema aut√¥nomo que sincroniza dados do Bitrix24 para banco local 3x/dia, sem webhooks.

## STATUS ATUAL DO PROJETO

### ‚úÖ CONCLU√çDO:
1. **Consulta de Dados** - `consultardados()` funcionando
2. **Tabela Dicion√°rio** - `tabeladinamica()` criando/atualizando com 771 campos
3. **Configura√ß√£o Centralizada** - Arquivo config consolidado
4. **DAO Gen√©rico** - M√©todos reutiliz√°veis para dicion√°rio

### üìù PR√ìXIMOS PASSOS:
1. **Criar Layout das Tabelas** - Usar dicion√°rio para criar colunas
2. **Inserir Dados** - Popular tabelas com dados brutos
3. **Testes Individuais** - Validar cada etapa antes de seguir

---

## FLUXO DE EXECU√á√ÉO - FUN√á√ÉO executar()

### ‚úÖ PASSO 1: Consultar Dados (CONCLU√çDO)
**Fun√ß√£o:** `consultardados()`
**O que faz:** Busca todos os dados do Bitrix24
**Retorna:**
- `cardsKW24` - Dados dos cards da SPA (1054)
- `camposSpaKW24` - Metadados dos campos 
- `etapasSpaKW24` - Etapas da SPA
- `camposTask` - Metadados tarefas
- `todasTarefas` - Dados das tarefas (grupo 37)
- `empresasVinculadas` - Empresas dos cards
- `camposCompanies` - Metadados empresas
- `cardsColaboradores` - Colaboradores (190, categoria 157)
- `camposSpaColaboradores` - Metadados colaboradores

### ‚úÖ PASSO 2: Tabela Dicion√°rio (CONCLU√çDO)
**Fun√ß√£o:** `tabeladinamica()`
**O que faz:** Cria/atualiza mapeamento UF_field ‚Üí Nome Amig√°vel
**Estrutura:** `bitrix_field_mapping` (uf_field | friendly_name | entity_type | field_type)
**Resultado:** 771 campos mapeados (148 Cards + 69 Tasks + 554 Companies)
**L√≥gica:**
- Se n√£o existe: cria tabela do zero
- Se existe: compara, remove obsoletos, adiciona novos
- **REGRA:** Nome amig√°vel NUNCA muda (estabilidade Power BI)

### üìù PASSO 3: Criar Tabelas Padr√£o (PR√ìXIMO)
**Fun√ß√£o:** `criarTabelasPadrao()` - UMA fun√ß√£o √∫nica e simples

**O que faz:**
1. Consulta tabela dicion√°rio `bitrix_field_mapping`
2. Para entity_type = 'cards' ‚Üí cria tabela `kw24_cards` usando friendly_name como colunas
3. Para entity_type = 'companies' ‚Üí cria tabela `kw24_clientes` usando friendly_name como colunas  
4. Para entity_type = 'tasks' ‚Üí cria tabela `kw24_tarefas` usando friendly_name como colunas

**L√≥gica no executar():**
```php
// PASSO 3: Criar tabelas (apenas se n√£o existirem)
if (!$this->tabelasJaExistem()) {
    $this->criarTabelasPadrao();
}
// Se j√° existem ‚Üí fazer nada por enquanto (repensaremos depois)
```

**Processo simples:**
- SELECT * FROM bitrix_field_mapping WHERE entity_type = 'cards'
- Para cada friendly_name ‚Üí CREATE TABLE kw24_cards com colunas
- Repetir para companies e tasks
- **Uma fun√ß√£o, uma tarefa, bem direto**

### üìù PASSO 4: Inserir Dados (DEPOIS)
**Fun√ß√µes:**
- `inserirDadosTabelas()` - Orquestrador  
- `inserirDadosTabela($entityType, $dados)` - Gen√©rica

**O que vai fazer:**
- Para cada registro: UF_field ‚Üí consulta dicion√°rio ‚Üí nome coluna
- Insert/Update dados brutos nas tabelas criadas
- **L√≥gica:** UF no dado ‚Üí nome amig√°vel na coluna

### üí° FUN√á√ÉO AUXILIAR: montararray()
**Status:** Mantida para uso futuro
**Finalidade:** Retornar dados formatados para APIs (n√£o para tabelas)
**Diferen√ßa:** Tabelas = dados brutos / montararray = dados processados

---

## METODOLOGIA DE DESENVOLVIMENTO

### üéØ ABORDAGEM PONTO A PONTO:
1. ‚úÖ Implementar uma fun√ß√£o
2. ‚úÖ Testar isoladamente  
3. ‚úÖ Validar resultado
4. ‚úÖ S√≥ ent√£o partir para pr√≥xima

### üîß PR√ìXIMO TESTE:
- ‚úÖ **IMPLEMENTADO:** `criarTabelasPadrao()` + `tabelasJaExistem()`
- ‚úÖ **IMPLEMENTADO:** M√©todos DAO: `tabelaExiste()`, `consultarCamposPorEntidade()`, `criarTabelaComColunas()`
- üß™ **TESTE:** Executar sincroniza√ß√£o e validar cria√ß√£o das tabelas `kw24_cards`, `kw24_clientes`, `kw24_tarefas`
- üìã **VALIDAR:** Estrutura das tabelas com colunas usando nomes amig√°veis

---

## CONFIGURA√á√ÉO ATUAL

**Entities:** cards (1054), companies (4), tasks (grupo 37), colaboradores (190, cat 157)
**Webhook:** https://gnapp.bitrix24.com.br/rest/21/g321gnxcrxnx4ing/
**DB:** kw24_sync_bitrix (local) / kw24co49_kw24_sync_bitrix (prod)

### PASSO 5: Criar/Atualizar Tabela TAREFAS  
**O que √©:** Tabela com tarefas vinculadas aos cards da SPA usando nomes amig√°veis
**Processo:** Usar dicion√°rio para traduzir UFs ‚Üí colunas com nomes leg√≠veis + sincronizar dados

### PASSO 6: Criar/Atualizar Tabela CLIENTES (Empresas)
**O que √©:** Tabela com empresas vinculadas aos cards usando nomes amig√°veis  
**Processo:** Usar dicion√°rio para traduzir UFs ‚Üí colunas com nomes leg√≠veis + sincronizar dados

**NOTA IMPORTANTE - TABELA COLABORADORES:** 
- **Filtro obrigat√≥rio:** Trazer APENAS colaboradores da categoria/funil 157 (RH financeiro espec√≠fico)
- **Motivo:** Existem v√°rios funis de RH com muitos cards - seria loucura trazer tudo
- **Implementa√ß√£o no PASSO 1:** `$cardsColaboradores = BitrixHelper::listarItensCrm(190, ['categoryId' => 157])`
- **An√°lise posterior:** Dados podem ser integrados na tabela CLIENTES (qtd colaboradores por departamento/empresa)





